openapi: 3.0.0
info:
  title: Shopify API
  version: 1.0.0
paths:
  /address:
    get:
      summary: Lấy địa chỉ của user
      tags:
        - Address
      responses:
        '200':
          description: Danh sách địa chỉ
  /address/provinces:
    get:
      summary: Lấy danh sách tỉnh/thành phố
      tags:
        - Address
      responses:
        '200':
          description: Danh sách tỉnh/thành phố
  /auth/signup:
    post:
      summary: Đăng ký tài khoản mới
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Đăng ký thành công
  /auth/signin:
    post:
      summary: Đăng nhập
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Đăng nhập thành công
  /auth/social:
    post:
      summary: Đăng nhập mạng xã hội (Google)
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                googleId:
                  type: string
                  description: Google ID
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Đăng nhập mạng xã hội thành công
        '400':
          description: Thiếu googleId
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: googleId is required
        '500':
          description: Lỗi hệ thống khi đăng nhập mạng xã hội
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Signing in with Google failed
  /auth/signout:
    post:
      summary: Đăng xuất
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: Refresh token cần xóa khi đăng xuất
      responses:
        '200':
          description: Đăng xuất thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Sign out successfully
        '401':
          description: Thiếu refreshToken
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: refreshToken is required
        '500':
          description: Lỗi hệ thống khi xóa refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Sign out and remove refresh token failed
  /auth/refresh-token:
    post:
      summary: Làm mới token
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: Refresh token hiện tại
      responses:
        '200':
          description: Làm mới token thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Refresh token successfully
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Thiếu refreshToken hoặc refreshToken không hợp lệ
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: refreshToken is required
        '404':
          description: refreshToken không tồn tại
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: refreshToken is invalid
        '500':
          description: Lỗi hệ thống khi tạo JWT mới
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Create JWT failed, try again later
  /auth/forgot-password:
    post:
      summary: Quên mật khẩu
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Gửi yêu cầu thành công, vui lòng kiểm tra email
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Request successfully, please wait for email
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
        '500':
          description: Lỗi hệ thống
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
  /auth/change-password:
    put:
      summary: Đổi mật khẩu
      tags:
        - Auth
      parameters:
        - in: path
          name: forgotPasswordCode
          schema:
            type: string
          required: true
          description: Mã xác thực đổi mật khẩu (lấy từ email)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Đổi mật khẩu thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Update password successfully
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
        '500':
          description: Lỗi hệ thống khi đổi mật khẩu
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Update password failed, please request to send email again
  /auth/confirm-email:
    get:
      summary: Gửi email xác nhận
      tags:
        - Auth
      responses:
        '200':
          description: Gửi email xác nhận thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Send email successfully
        '400':
          description: Không có email hoặc email đã xác thực
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No email provided
        '500':
          description: Lỗi hệ thống hoặc không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
  /auth/verify-email:
    get:
      summary: Xác thực email
      tags:
        - Auth
      parameters:
        - in: path
          name: emailCode
          schema:
            type: string
          required: true
          description: Mã xác thực email (lấy từ email)
      responses:
        '200':
          description: Xác thực email thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Confirm email successfully
        '500':
          description: Lỗi hệ thống hoặc không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
  /brand/{brandId}:
    get:
      summary: Lấy thông tin thương hiệu theo ID
      tags:
        - Brand
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: ID thương hiệu
      responses:
        '200':
          description: Lấy brand thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  brand:
                    $ref: '#/components/schemas/Brand'
        '404':
          description: Không tìm thấy brand
  /brand/active:
    get:
      summary: Lấy danh sách thương hiệu đang hoạt động
      tags:
        - Brand
      responses:
        '200':
          description: Danh sách brand active
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  brands:
                    type: array
                    items:
                      $ref: '#/components/schemas/Brand'
  /brands:
    get:
      summary: Lấy danh sách tất cả thương hiệu
      tags:
        - Brand
      responses:
        '200':
          description: Danh sách brand
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  brands:
                    type: array
                    items:
                      $ref: '#/components/schemas/Brand'
  /brands-for-admin:
    get:
      summary: Lấy danh sách thương hiệu cho admin
      tags:
        - Brand
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Danh sách brand cho admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  brands:
                    type: array
                    items:
                      $ref: '#/components/schemas/Brand'
  /brand/create:
    post:
      summary: Tạo thương hiệu mới
      tags:
        - Brand
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                categories:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Tạo brand thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  brand:
                    $ref: '#/components/schemas/Brand'
        '400':
          description: Lỗi dữ liệu
  /brand/update:
    put:
      summary: Cập nhật thương hiệu
      tags:
        - Brand
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brandId:
                  type: string
                name:
                  type: string
                categories:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Cập nhật brand thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  brand:
                    $ref: '#/components/schemas/Brand'
        '400':
          description: Lỗi dữ liệu
  /brand/delete:
    delete:
      summary: Xóa thương hiệu
      tags:
        - Brand
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: brandId
          schema:
            type: string
          required: true
          description: ID thương hiệu
      responses:
        '200':
          description: Xóa brand thành công
        '404':
          description: Không tìm thấy brand
  /brand/restore:
    get:
      summary: Khôi phục thương hiệu đã xóa
      tags:
        - Brand
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: brandId
          schema:
            type: string
          required: true
          description: ID thương hiệu
      responses:
        '200':
          description: Khôi phục brand thành công
        '404':
          description: Không tìm thấy brand
  /category/{categoryId}:
    get:
      summary: Lấy thông tin danh mục theo ID
      tags:
        - Category
      parameters:
        - in: path
          name: categoryId
          schema:
            type: string
          required: true
          description: ID danh mục
      responses:
        '200':
          description: Lấy category thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  category:
                    $ref: '#/components/schemas/Category'
        '404':
          description: Không tìm thấy category
  /category/active:
    get:
      summary: Lấy danh sách danh mục đang hoạt động
      tags:
        - Category
      responses:
        '200':
          description: Danh sách category active
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
  /category/by-store/{storeId}:
    get:
      summary: Lấy danh sách danh mục theo cửa hàng
      tags:
        - Category
      parameters:
        - in: path
          name: storeId
          schema:
            type: string
          required: true
          description: ID cửa hàng
      responses:
        '200':
          description: Danh sách category theo store
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
  /categories:
    get:
      summary: Get list of categories for admin
      tags:
        - Category
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Search by category name
        - in: query
          name: sortBy
          schema:
            type: string
          description: Sort field (default _id)
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
          description: Sort order (default asc)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
          description: Number of items per page (default 6)
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Page number (default 1)
        - in: query
          name: categoryId
          schema:
            type: string
          description: Filter by parent category ID
      responses:
        '200':
          description: List of categories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Load list categories successfully
                  filter:
                    type: object
                    properties:
                      search:
                        type: string
                      sortBy:
                        type: string
                      order:
                        type: string
                      limit:
                        type: integer
                      pageCurrent:
                        type: integer
                      pageCount:
                        type: integer
                      categoryId:
                        type: string
                  size:
                    type: integer
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
        '500':
          description: Failed to load categories
  /category/create:
    post:
      summary: Tạo danh mục mới
      tags:
        - Category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Tạo category thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  category:
                    $ref: '#/components/schemas/Category'
        '400':
          description: Lỗi dữ liệu
  /category/update:
    put:
      summary: Cập nhật danh mục
      tags:
        - Category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                categoryId:
                  type: string
                name:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Cập nhật category thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  category:
                    $ref: '#/components/schemas/Category'
        '400':
          description: Lỗi dữ liệu
  /category/delete:
    delete:
      summary: Xóa danh mục
      tags:
        - Category
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: categoryId
          schema:
            type: string
          required: true
          description: ID danh mục
      responses:
        '200':
          description: Xóa category thành công
        '404':
          description: Không tìm thấy category
  /category/restore:
    get:
      summary: Khôi phục danh mục đã xóa
      tags:
        - Category
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: categoryId
          schema:
            type: string
          required: true
          description: ID danh mục
      responses:
        '200':
          description: Khôi phục category thành công
        '404':
          description: Không tìm thấy category
  /user/{userId}:
    get:
      summary: Lấy thông tin user theo ID
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
      responses:
        '200':
          description: Lấy user thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
  /user/profile/{userId}:
    get:
      summary: Lấy profile user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
      responses:
        '200':
          description: Lấy profile thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
  /users:
    get:
      summary: Lấy danh sách user (user thường)
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Tìm kiếm theo tên
        - in: query
          name: sortBy
          schema:
            type: string
          description: Trường sắp xếp
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
          description: Thứ tự sắp xếp
        - in: query
          name: limit
          schema:
            type: integer
          description: Số lượng mỗi trang
        - in: query
          name: page
          schema:
            type: integer
          description: Trang
      responses:
        '200':
          description: Lấy danh sách user thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  filter:
                    type: object
                  size:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '500':
          description: Lỗi hệ thống
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /users-for-admin/{userId}:
    get:
      summary: Lấy danh sách user cho admin
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID admin
        - in: query
          name: search
          schema:
            type: string
          description: Tìm kiếm
        - in: query
          name: sortBy
          schema:
            type: string
          description: Trường sắp xếp
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
          description: Thứ tự sắp xếp
        - in: query
          name: limit
          schema:
            type: integer
          description: Số lượng mỗi trang
        - in: query
          name: page
          schema:
            type: integer
          description: Trang
      responses:
        '200':
          description: Lấy danh sách user thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  filter:
                    type: object
                  size:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '500':
          description: Lỗi hệ thống
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/profile-update/{userId}:
    put:
      summary: Cập nhật profile user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                id_card:
                  type: string
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Cập nhật profile thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Lỗi dữ liệu hoặc không thể cập nhật email Google
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/password-update/{userId}:
    put:
      summary: Đổi mật khẩu user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
      responses:
        '200':
          description: Đổi mật khẩu thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Lỗi dữ liệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/address-add/{userId}:
    post:
      summary: Thêm địa chỉ cho user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                addressDetail:
                  type: object
                  properties:
                    province:
                      type: string
                    provinceName:
                      type: string
                    district:
                      type: string
                    districtName:
                      type: string
                    ward:
                      type: string
                    wardName:
                      type: string
                    street:
                      type: string
      responses:
        '200':
          description: Thêm địa chỉ thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Lỗi dữ liệu hoặc vượt quá 10 địa chỉ
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/address-update/{userId}:
    put:
      summary: Cập nhật địa chỉ user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
        - in: query
          name: index
          schema:
            type: integer
          required: true
          description: Vị trí địa chỉ trong mảng
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                addressDetail:
                  type: object
                  properties:
                    province:
                      type: string
                    provinceName:
                      type: string
                    district:
                      type: string
                    districtName:
                      type: string
                    ward:
                      type: string
                    wardName:
                      type: string
                    street:
                      type: string
      responses:
        '200':
          description: Cập nhật địa chỉ thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Lỗi dữ liệu hoặc địa chỉ đã tồn tại
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Không tìm thấy user hoặc địa chỉ
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/address-delete/{userId}:
    delete:
      summary: Xóa địa chỉ user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
        - in: query
          name: index
          schema:
            type: integer
          required: true
          description: Vị trí địa chỉ trong mảng
      responses:
        '200':
          description: Xóa địa chỉ thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Lỗi dữ liệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Không tìm thấy user hoặc địa chỉ
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/avatar-update/{userId}:
    put:
      summary: Cập nhật avatar user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          description: Cập nhật avatar thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Không có file upload hoặc lỗi dữ liệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/cover-update/{userId}:
    put:
      summary: Cập nhật cover user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cover:
                  type: string
                  format: binary
      responses:
        '200':
          description: Cập nhật cover thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Không có file upload hoặc lỗi dữ liệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Brand:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: string
        categories:
          type: array
          items:
            type: string
        isActive:
          type: boolean
    Category:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: string
        image:
          type: string
        isActive:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Address
    description: Các API quản lý địa chỉ
  - name: Auth
    description: Các API xác thực và quản lý tài khoản người dùng
  - name: Brand
    description: Quản lý thương hiệu
  - name: Category
    description: Quản lý danh mục sản phẩm
